name: Build, Lint, and Test

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build-lint-test:
    name: Build, Lint, and Test
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get Yarn cache directory
        run: echo "YARN_CACHE_DIR=$(yarn config get cacheFolder)" >> "$GITHUB_OUTPUT"
        id: yarn-cache-dir
      - name: Get Yarn version
        run: echo "YARN_VERSION=$(yarn --version)" >> "$GITHUB_OUTPUT"
        id: yarn-version
      - name: Cache yarn dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache-dir.outputs.YARN_CACHE_DIR }}
          key: yarn-cache-${{ runner.os }}-${{ steps.yarn-version.outputs.YARN_VERSION }}-${{ hashFiles('yarn.lock') }}
      - run: yarn --immutable
      - run: yarn build
      - run: yarn lint
      - run: yarn test
  validate-changelog:
    name: Validate changelog
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Get Node.js version
        id: nvm
        run: echo "NODE_VERSION=$(cat .nvmrc)" >> "$GITHUB_OUTPUT"
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ steps.nvm.outputs.NODE_VERSION }}
      - run: yarn --immutable
      - run: yarn build
      - name: Validate RC changelog
        if: ${{ startsWith(github.head_ref, 'release/') }}
        run: yarn changelog validate --rc
      - name: Validate changelog
        if: ${{ !startsWith(github.head_ref, 'release/') }}
        run: yarn changelog validate
  all-jobs-pass:
    name: All jobs pass
    runs-on: ubuntu-20.04
    needs:
      - build-lint-test
      - validate-changelog
    steps:
      - run: echo "Great success!"
